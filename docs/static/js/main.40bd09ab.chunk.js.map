{"version":3,"sources":["GameUtils.js","Board.js","localStorageDB.js","recommend.js","RecommendBox.js","App.js","index.js","../node_modules/natural/lib/natural/sentiment sync"],"names":["human_cluemaster_hints_needed","game","error","allrevealed","human_cluemaster_hints","get_lang","seed","split","next_player","starting_player","type","filter","x","length","red_clues","auto_clues","red","blue_clues","blue","get_remaining","c","replace","res","idx","num_rows","num_cols","revealed","get_full_releaved_color","toggle_reveal","window","render","BoardNotifications","props","state","hidden","this","setState","revealed_color","gu","winner_box","exit","href","onClick","hide","bind","class","winner","className","role","React","Component","Board","show_all_colors","boardRows","i","rowCells","j","revealStyle","colorStyle","cellStrike","r","b","n","e","handlers","require_double_click","onDoubleClick","cell","key","words","push","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","console","db","keyValue","k","v","request","open","onsuccess","evt","result","onerror","event","log","onupgradeneeded","target","createObjectStore","keyPath","transaction","oncomplete","ldb","get","getValue","callback","objectStore","setTimeout","set","value","put","storage_key","vec_shape","model","load_model","vec","word","common_words","other_word_forms","process_data","word_to_idx","tf","reshape","common_words_stems_set","Set","map","stem","vec_promise","Promise","resolve","reject","oReq","XMLHttpRequest","addEventListener","Float32Array","response","responseType","send","word_promise","all","then","word_to_vec","undefined","Error","slice","distances_to_words","word_list","target_vec","mul","sum","add","recommend","query","fail_and_bad_score","fail","min","bad","bad_dist","bad_score","topk","shape","values","risk","squeeze","good_dist","good","score","num_guesses","best_candidates","indices","arraySync","forbidden_words","forbid_word","forEach","word_form","most_common_words","blacklist","candidate_idx","concat","some","has","use_common_words","color_to_flavor","color","CluemasterHintWordBox","flavor","clues","AutoCluesWordBox","self","deletebtn","word_idx","highlight","highlight_last","opacity","dialog","show","body","join","actions","Dialog","CancelAction","OKAction","splice","removed_word","bsSize","style","ref","component","get_query_and_hash","w","Math","parseInt","query_hash","str","hash1","hash2","char","charCodeAt","hash","RecommendBoxNotifications","cluemaster_hints_needed","auto_clues_needed","enable_auto_clues","clues_needed","langauge_available","id","throttled_execute","queue","next_request","shift","RecommendBox","cluemaster_hints","cluemaster_hints_hash","cluemaster_hints_jobs","current_hash","hints","forceUpdate","update_cluemaster_hints","buttons","val","remaining","enabled","box","clue","update_word","auto_clues_blacklist","ng","next_clue","disabled","toString","maybe_shake","Object","htmlFor","marginLeft","marginRight","set_num_guessed","controls","autoclues_control","cluemaster_hints_control","boxes","borderSpacing","require","Game","assign","all_revealed","AboutModal","GamePanel","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","SettingsModal","sessionStorage","removeItem","location","reload","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-haspopup","src","App","natural","LancasterStemmer","attach","gameComponent","ReactDOM","document","getElementById","webpackEmptyContext","req","code","keys","module","exports"],"mappings":"+UAAO,SAASA,EAA8BC,GAC1C,OAAQA,EAAKC,OAASD,EAAKE,aAAeF,EAAKG,uBAG5C,SAASC,EAASJ,GACrB,OAAOA,EAAKK,KAAKC,MAAM,IAAK,GAAG,GAI5B,SAASC,EAAYP,GACxB,IAEMQ,EAFYR,EAAKS,KAAKC,QAAO,SAAAC,GAAC,MAAS,KAALA,KAAUC,OAC/BZ,EAAKS,KAAKC,QAAO,SAAAC,GAAC,MAAS,KAALA,KAAUC,OACA,MAAQ,OAErDC,EAAYb,EAAKc,WAAWC,IAAIH,OAChCI,EAAahB,EAAKc,WAAWG,KAAKL,OACxC,OAAIC,EAAYG,EACL,MACAA,EAAaH,EACb,OAEAL,EAKR,SAASU,EAAclB,EAAMmB,GAChCA,EAAIA,EAAEC,QAAQ,OAAQ,KAAKA,QAAQ,MAAO,KAE1C,IADA,IAAIC,EAAM,EACDC,EAAM,EAAGA,EAAMtB,EAAKuB,SAAWvB,EAAKwB,SAAUF,GAAO,EACrDtB,EAAKyB,SAASH,IAAQtB,EAAKS,KAAKa,IAAQH,IACzCE,GAAO,GAGf,OAAOA,EAGJ,SAASK,EAAwB1B,GACpC,OAAgC,GAA5BkB,EAAclB,EAAM,KACb,QAC4B,GAA5BkB,EAAclB,EAAM,KACpB,MAC4B,GAA5BkB,EAAclB,EAAM,KACpB,OAEA,KCxCf,SAAS2B,EAAcL,GAGnB,IAAItB,EAAO4B,OAAO5B,KAClBA,EAAKyB,SAASH,IAAQtB,EAAKyB,SAASH,GACpCM,OAAOC,SAIJ,IAAMC,EAAb,YACI,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CAACC,QAAQ,GAFP,EADvB,oEAOQC,KAAKC,SAAS,CAACF,QAAQ,MAP/B,+BAWQ,IAAMjC,EAAOkC,KAAKH,MAAM/B,KACpBoC,EAAiBC,EAA2BrC,GAG5CsC,EAAa,KACjB,GAAKtC,EAAKE,aAAkC,OAAnBkC,EAgBrBF,KAAKF,MAAMC,QAAS,OAfpB,IAAKC,KAAKF,MAAMC,OAAQ,CACpB,IAAIM,EAAO,uBAAGC,KAAK,IAAIC,QAASP,KAAKQ,KAAKC,KAAKT,OAAO,yBAAKU,MAAM,qBAAX,SAClDC,EAAS,KACS,QAAlBT,EACAS,EAAU,6BAAK,0BAAMC,UAAU,gBAAhB,QAAL,qBAAkEP,GACnD,OAAlBH,EACPS,EAAU,6BAAK,0BAAMC,UAAU,eAAhB,OAAL,qBAAgEP,GACjD,SAAlBH,IACPS,EAAU,wDAA8BN,IAE5CD,EAAc,yBAAKQ,UAAU,mBAAmBC,KAAK,SAChDF,GAMb,OAAOP,MAlCf,GAAwCU,IAAMC,WAsCjCC,EAAb,iLAMQ,IAJA,IAAMlD,EAAOkC,KAAKH,MAAM/B,KAClBmD,EAAkBnD,EAAKE,aAAqD,OAArCmC,EAA2BrC,GAEpEoD,EAAY,GACPC,EAAI,EAAGA,EAAIrD,EAAKuB,SAAU8B,GAAK,EAAG,CAEvC,IADA,IAAIC,EAAW,GADwB,WAE9BC,GACL,IAAIjC,EAAM+B,EAAIrD,EAAKwB,SAAW+B,EAE1BC,EAAc,kBAOdC,EAAa,GACbC,EAAa,IACb1D,EAAKyB,SAASH,IAAQ6B,KACtBK,EAAc,gBACdC,EAVmB,CACnBE,EAAG,WACHC,EAAG,YACHC,EAAG,eACHC,EAAG,YAMyB9D,EAAKS,KAAKa,IAClCtB,EAAKyB,SAASH,IAAQ6B,IACtBO,EAAa,gBAGjBK,EAAW,CAACtB,QAAS,kBAAMd,EAAcL,KACzCtB,EAAKgE,uBACLD,EAAW,CACPE,cAAe,kBAAMtC,EAAcL,MAI3C,IAAI4C,EACA,sCACIpB,UAAS,0BAAqBU,EAArB,YAAoCC,EAApC,YAAkDC,GAC3DS,IAAK7C,GACDyC,GAEJ,0BAAMjB,UAAU,aACX9C,EAAKoE,MAAM9C,KAIxBgC,EAASe,KAAKH,IArCTX,EAAI,EAAGA,EAAIvD,EAAKwB,SAAU+B,GAAK,EAAG,CAAC,IAmBpCQ,EAnBmC,EAAlCR,GAuCTH,EAAUiB,KACN,wBAAIF,IAAKd,GAAIC,IAIrB,OACI,yBAAKR,UAAU,OAEX,2BAAOA,UAAU,eAAc,+BAAQM,SAvDvD,GAA2BJ,IAAMC,W,wBCnD7BqB,EAAY1C,OAAO0C,WAAa1C,OAAO2C,cAAgB3C,OAAO4C,iBAAmB5C,OAAO6C,YACvFH,GACHI,QAAQzE,MAAM,yBAEhB,IAAI0E,EACFC,EAAW,CACTC,EAAG,GACHC,EAAG,IAELC,EAAUT,EAAUU,KAAK,MAC3BD,EAAQE,UAAY,SAASC,GAC3BP,EAAKzC,KAAKiD,QAEZJ,EAAQK,QAAU,SAASC,GACzBX,QAAQzE,MAAM,2BACdyE,QAAQY,IAAID,IAGdN,EAAQQ,gBAAkB,SAASF,GACjCV,EAAK,KACOU,EAAMG,OAAOL,OAAOM,kBAAkB,MAAO,CACvDC,QAAS,MAGLC,YAAYC,WAAa,SAAU9B,GACvCa,EAAKb,EAAE0B,OAAOb,KAwBlB,IACekB,EADL,CAACC,IApBX,SAASC,EAAS5B,EAAK6B,GACjBrB,EAMJA,EAAGgB,YAAY,OAAOM,YAAY,OAAOH,IAAI3B,GAAKc,UAAY,SAASI,GACrE,IAAIF,EAAUE,EAAMG,OAAOL,QAAUE,EAAMG,OAAOL,OAAOL,GAAM,KAC/DkB,EAASb,IAPTe,YAAW,WACTH,EAAS5B,EAAK6B,KACb,MAgBmBG,IAP1B,SAAkBhC,EAAKiC,GAErBxB,EAASC,EAAIV,EACbS,EAASE,EAAIsB,EACbzB,EAAGgB,YAAY,MAAO,aAAaM,YAAY,OAAOI,IAAIzB,KC3CxD0B,EAAc,iBACdC,EAAY,EAAE,EAAG,KAGVC,EAAQ,KAGZ,SAASC,EAAWT,GAEvB,IAAIU,EAAM,KACNC,EAAO,KACPC,EAAe,KACfC,EAAmB,KAEvB,SAASC,IAEL,IADA,IAAIC,EAAc,GACT1D,EAAI,EAAGA,EAAIsD,EAAK/F,OAAQyC,IAC7B0D,EAAYJ,EAAKtD,IAAMA,EAE3BmD,EAAQ,CACJE,IAAKM,IAAUN,GAAKO,QAAQV,GAC5BI,KAAMA,EACNI,YAAaA,EACbH,aAAcA,EACdM,uBAAwB,IAAIC,IAAIP,EAAaQ,KAAI,SAAAT,GAAI,OAAIA,EAAKU,WAC9DR,iBAAkBA,GAEtBnC,QAAQY,IAAI,gBACRU,GACAA,EAASQ,GA8CjBX,EAAIC,IAAIQ,GA1CR,SAAsBF,GAClB,GAAc,OAAVA,EAAgB,CAChB1B,QAAQY,IAAI,sCAEZ,IAAIgC,EAAc,IAAIC,SAAQ,SAASC,EAASC,GAC5C,IAAIC,EAAO,IAAIC,eACfD,EAAKE,iBAAiB,QAAQ,SAASvC,GACnCqB,EAAM,IAAImB,aAAaxC,EAAMG,OAAOsC,UACpCN,OAEJE,EAAK1C,KAAK,MAAO,uBACjB0C,EAAKK,aAAe,cACpBL,EAAKM,UAGLC,EAAe,IAAIV,SAAQ,SAASC,EAASC,GAC7C,IAAIC,EAAO,IAAIC,eACfD,EAAKE,iBAAiB,QAAQ,SAASvC,GACnCsB,EAAOtB,EAAMG,OAAOsC,SAAb,KACPlB,EAAevB,EAAMG,OAAOsC,SAAb,aACfjB,EAAoBxB,EAAMG,OAAOsC,SAAb,iBACpBN,OAEJE,EAAK1C,KAAK,MAAO,uBACjB0C,EAAKK,aAAe,OACpBL,EAAKM,UAGTT,QAAQW,IAAI,CAACZ,EAAaW,IAAeE,MAAK,WAC1CtC,EAAIM,IAAIG,EAAa,CAACI,EAAKC,EAAMC,EAAcC,IAC/CC,YAGJpC,QAAQY,IAAI,qCACZoB,EAAMN,EAAM,GACZO,EAAOP,EAAM,GACbQ,EAAeR,EAAM,GACrBS,EAAmBT,EAAM,GACzBU,OAOZ,SAASsB,EAAYzB,GACjB,IAAIrF,EAAMkF,EAAMO,YAAYJ,GAC5B,QAAY0B,IAAR/G,EACA,MAAMgH,MAAM,oBAAsB3B,EAAO,mBAE7C,OAAOH,EAAME,IAAI6B,MAAMjH,EAAK,GAQhC,SAASkH,EAAmBC,GACxB,IALmBC,EAKfrH,EAAM,GADyB,uBAEnC,YAAiBoH,EAAjB,+CAA4B,CAAC,IAApB9B,EAAmB,QACxBtF,EAAIgD,MAPWqE,EAOQN,EAAYzB,GANhCH,EAAME,IAAIiC,IAAID,GAAYE,KAAK,GAAG,GAAMD,KAAK,GAAGE,IAAI,MAGxB,kFAKnC,OAAO7B,IAAU3F,GAAM,GAGpB,SAASyH,EAAUC,GAGtB,OAFArE,QAAQY,IAAI,QAASyD,GAEd,IAAIxB,SAAQ,SAASC,EAASC,GAkEjCD,EAjEYR,KAAQ,WAEhB,IAAIgC,EAAqB,KACrBD,EAAME,KAAKrI,OAAS,IAEpBoI,EADgBR,EAAmBO,EAAME,MACVC,KAAK,GAAGP,IAAI,KAE/C,GAAII,EAAMI,IAAIvI,OAAS,EAAG,CACtB,IAAIwI,EAAWZ,EAAmBO,EAAMI,KACpCE,EAAYD,EAAST,KAAK,GAAGW,KAAKF,EAASG,MAAM,IAAI,GAAMC,OAAOjB,MAAM,CAAC,EAAGQ,EAAMU,MAAO,EAAE,EAAG,IAAId,KAAK,GAAGe,UAE1GV,EADuB,OAAvBA,EACqBK,EAEArC,IAAWqC,EAAWL,GAInD,IAAIW,EAAYnB,EAAmBO,EAAMa,MAGrCC,EAFaF,EAAUhB,KAAK,GAAGW,KAAKK,EAAUJ,MAAM,IAAI,GAAMC,OAAOjB,MAAM,CAAC,EAAGQ,EAAMe,YAAc,GAAI,EAAE,EAAG,IAAIJ,UAGzF,OAAvBV,IACAa,EAAQA,EAAMhB,IAAIG,IAEtB,IACIe,EADcF,EAAMP,KAAK,KACKU,QAAQC,YAEtCC,EAAkB,IAAI/C,IAE1B,SAASgD,EAAYxD,GACjBuD,EAAgBrB,IAAIlC,GACpBuD,EAAgBrB,IAAIlC,EAAO,KAC3BuD,EAAgBrB,IAAIlC,EAAO,OAC3BuD,EAAgBrB,IAAIlC,EAAO,QAC3BuD,EAAgBrB,IAAIlC,EAAO,MAC3BuD,EAAgBrB,IAAIlC,EAAKU,SACxBb,EAAMK,iBAAiBF,IAAS,IAAIyD,SAAQ,SAASC,GAClDH,EAAgBrB,IAAIwB,MAK5B,IADA,IAAIC,EAAoB9D,EAAMI,aAAa2B,MAAM,EAAG,KACpD,4BAAqBQ,EAAMa,MAA3B,YAAoCb,EAAMI,KAA1C,YAAkDJ,EAAME,MAAxD,YAAkEF,EAAMwB,WAAa,IAArF,YAA6FD,IAA7F,eAAiH,CAC7GH,EADS,MAGb,IAAI9I,EAAM,GA7CiB,uBA8C3B,YAA0B0I,EAA1B,+CAA2C,CAAC,IAAnCS,EAAkC,QACjC7D,EAAOH,EAAMG,KAAK6D,GACV,CAAC7D,GAAM8D,OAAOjE,EAAMK,iBAAiBF,IAAS,IACnD+D,MAAK,SAAA/D,GAAI,OAAIuD,EAAgBS,IAAIhE,QAItCoC,EAAM6B,mBAAqBpE,EAAMU,uBAAuByD,IAAIhE,EAAKU,SAGjEV,EAAK/F,QAAU,IAInBS,EAAIgD,KAAKsC,GACTwD,EAAYxD,MA7DW,kFA+D3B,OAAOtF,S,qBCtKnB,SAASwJ,EAAgBC,GACrB,MAAiB,OAATA,EAAkB,cAAgB,e,IAIxCC,E,iLAIE,IAAIC,EAASH,EAAgB3I,KAAKH,MAAM+I,OACpCG,EAAQ/I,KAAKH,MAAMkJ,MAAM1C,MAAM,EAAG,GAClCE,EAAY,GAEhB,GAAoB,GAAhBwC,EAAMrK,OACN6H,EAAUpE,KAAK,yBAAKF,IAAI,UAAUrB,UAAW,6CAA+CkI,EAAQjI,KAAK,iBAEzG,IAAK,IAAIM,EAAI,EAAGA,EAAI4H,EAAMrK,OAAQyC,IAC9BoF,EAAUpE,KAAK,0BAAMF,IAAK,QAAUd,EAAGP,UAAWkI,GAAnC,IAA6CC,EAAM5H,GAAnD,MACXA,EAAI,EAAI4H,EAAMrK,QACd6H,EAAUpE,KAAK,wBAAIF,IAAK,MAAQd,KAI5C,OAAQ,4BACJ,wBAAIP,UAAU,yCACT2F,Q,GApBmBzF,IAAMC,WA0BpCiI,E,YACF,WAAYnJ,GAAQ,qEACVA,I,sEAGA,IAAD,OACC0G,EAAY,GAEduC,EAASH,EAAgB3I,KAAKH,MAAM+I,OACpCG,EAAQ/I,KAAKH,MAAMkJ,MAEvB,GAAoB,GAAhBA,EAAMrK,OACN6H,EAAUpE,KAAK,0BAAMF,IAAI,UAAUrB,UAAU,iBAA9B,oBAEf,IAAK,IAAIO,EAAI,EAAGA,EAAI4H,EAAMrK,OAAQyC,IAAK,CAG3B,IACA8H,EA2BIC,EA9BZ,GAAiB,OAAbH,EAAM5H,GACNoF,EAAUpE,KAAK,yBAAKF,IAAK,WAAad,EAAGP,UAAW,6CAA+CkI,EAAQjI,KAAK,iBAC7G,WACCoI,EAAO,EACX,IAAME,EAAWhI,EACXiI,EAAajI,EAAI,GAAK4H,EAAMrK,QAAU,EAAKmB,MAAMwJ,eACjDC,EAAUF,EAAY,EAAM,GAsB9BF,EAAY,KACZE,IACIF,EAAY,uBAAG5I,KAAK,IAAIC,QAtBhC,WACI0I,EAAKM,OAAOC,KAAK,CACbC,KAAO,yBAAK7I,UAAU,mCACZ,4EACA,6BACA,0BAAMA,UAAWkI,GAASC,EAAMI,GAAUO,KAAK,MAC/C,6BACA,gEAEVC,QAAS,CACLC,IAAOC,eACPD,IAAOE,UAAS,WAAY,IAAD,cACab,EAAKpJ,MAAMkJ,MAAMgB,OAAOZ,EAAU,GAAG,GADlD,GAChBa,EADgB,UAEvBf,EAAKpJ,MAAMwI,UAAUlG,KAAK6H,GAC1BtK,OAAOC,aAGfsK,OAAQ,WAKsCrJ,UAAU,iBAAiBsJ,MAAO,CAAC,QAAW,KAAhF,SAEpB3D,EAAUpE,KAAK,0BAAMF,IAAK,QAAUd,EAAG+I,MAAO,CAACZ,QAASA,GAAU1I,UAAWkI,GACzE,kBAAC,IAAD,CAAQqB,IAAK,SAACC,GAAgB,EAAKb,OAASa,KAC3CrB,EAAM5H,GAAGuI,KAAK,KAFJ,OAEgBR,IAhC5B,GAmCH/H,EAAI,EAAI4H,EAAMrK,QACd6H,EAAUpE,KAAK,wBAAIF,IAAK,MAAQd,KAI5C,OAAQ,4BACJ,wBAAIP,UAAU,4BACT2F,Q,GA3DczF,IAAMC,WA+ErC,SAASsJ,EAAmBvM,EAAM8K,GAG9B,IAFA,IAAI0B,EAAI,CAAC7I,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAExBxC,EAAM,EAAGA,EAAMtB,EAAKuB,SAAWvB,EAAKwB,SAAUF,GAAO,EACrDtB,EAAKyB,SAASH,IAA4B,OAApBtB,EAAKoE,MAAM9C,IAClCkL,EAAExM,EAAKS,KAAKa,IAAM+C,KAAKrE,EAAKoE,MAAM9C,IAI1C,GAAa,QAATwJ,EACA,IAAIlB,EAAO4C,EAAE5I,EACTuF,EAAMqD,EAAE7I,EAAE8G,OAAO+B,EAAE3I,QAEnB+F,EAAO4C,EAAE7I,EACTwF,EAAMqD,EAAE5I,EAAE6G,OAAO+B,EAAE3I,GAE3B,IAAIoF,EAAOuD,EAAE1I,EACb,GAAmB,GAAf8F,EAAKhJ,OACL,MAAO,CAAC,KAAM,MAElB,GAAwB,OAApBZ,EAAK8J,YACL,IAAIA,EAAcF,EAAKhJ,YAEnBkJ,EAAc2C,KAAKvD,IAAIU,EAAKhJ,OAAQ8L,SAAS1M,EAAK8J,cAE1D,GAAiB,eAAb9J,EAAKyJ,KAAuB,CAC5BN,EAAM,GACN,IAAIM,EAAO,OACR,GAAiB,OAAbzJ,EAAKyJ,KAAe,CAC3BN,EAAM,GACNF,EAAO,GACHQ,EAAO,OAEPA,EAAOgD,KAAKvD,IAAIwD,SAAS1M,EAAKyJ,MAAON,EAAIvI,QAGjD,IAAImI,EAAQ,CAACa,KAAMA,EAAMT,IAAKA,EAAKF,KAAMA,EAAMQ,KAAMA,EAAMK,YAAaA,EAAac,iBAAkB5K,EAAK4K,kBACxG+B,EAAa,QAAU/C,EAAKgC,KAAK,KAAO,QAAUzC,EAAIyC,KAAK,KAAM,SAAW3C,EAAK2C,KAAK,KACzE,SAAWnC,EAAO,gBAAkBK,EAAc,iBAAmB9J,EAAK4K,iBAE3F,MAAO,CAAC7B,EADR4D,EArDJ,SAAcC,GAKV,IAJA,IAAIvJ,EAAIuJ,EAAIhM,OACRiM,EAAQ,KACRC,EAAQ,MAELzJ,KAAK,CACR,IAAM0J,EAAOH,EAAII,WAAW3J,GAC5BwJ,EAAiB,GAARA,EAAcE,EACvBD,EAAiB,GAARA,EAAcC,EAG3B,OAAuB,MAAfF,IAAU,IAAaC,IAAU,GA0C5BG,CAAKN,IA8Bf,IAAMO,EAAb,iLAEQ,IAAMlN,EAAOkC,KAAKH,MAAM/B,KACpBmN,EAA0B9K,EAAiCrC,GAC3DoN,GAAqBpN,EAAKE,aAAeF,EAAKqN,kBAC9CC,EAAgBH,GAA2BC,EAC3CG,EAA2C,MAArBlL,EAAYrC,GAElCqB,EAAM,GAkBV,OAhBIiM,GAEAjM,EAAIgD,KAAK,yBAAKF,IAAI,OAAOrB,UAAU,+BAA+B0K,GAAG,0BACjE,yBAAK1K,UAAU,sBAAsBC,KAAK,SAA1C,+EAMJuK,IAAiBC,GACjBlM,EAAIgD,KAAK,yBAAKF,IAAI,QAAQqJ,GAAG,0BACzB,yBAAK1K,UAAU,sBAAsBC,KAAK,SAA1C,gDAKD,6BAAM1B,OA1BrB,GAA+C2B,IAAMC,WA+BrD,SAASwK,EAAkBC,GACvB,GAAoB,GAAhBA,EAAM9M,OACNsF,YAAW,kBAAMuH,EAAkBC,KAAQ,SACxC,CAEH,IADA,IAAIC,EAAe,KACbD,EAAM9M,OAAS,GACjB+M,EAAeD,EAAME,QAEzBD,GAAa,kBAAMF,EAAkBC,OAItC,IAAMG,EAAb,YACI,WAAY9L,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT8L,iBAAkB,CAAC/M,IAAK,GAAIE,KAAM,IAClC8M,sBAAuB,CAAChN,IAAK,KAAME,KAAM,OAE7C,EAAK+M,sBAAwB,CAACjN,IAAK,GAAIE,KAAM,IAC7CiF,YAAW,kBAAMuH,EAAkB,EAAKO,sBAAL,OAAoC,GACvE9H,YAAW,kBAAMuH,EAAkB,EAAKO,sBAAL,QAAqC,GARzD,EADvB,qFAY4BlD,GACpB,IAAIK,EAAOjJ,KACX,GAAc,OAAVsE,EAAJ,CAF2B,MAMD+F,EAAmBrK,KAAKH,MAAM/B,KAAM8K,GANnC,mBAMtB/B,EANsB,KAMf4D,EANe,KAOvBsB,EAAe/L,KAAKF,MAAM+L,sBAC1BG,EAAQhM,KAAKF,MAAM8L,iBAEvB,GAAmB,OAAfnB,EAGA,OAFAuB,EAAMpD,GAAS,CAAC,gCAChBmD,EAAanD,GAAS,MAItBmD,EAAanD,IAAU6B,IAG3BuB,EAAMpD,GAAS,GAEf5I,KAAK8L,sBAAsBlD,GAAOzG,MAAK,SAAA2B,GACnC8C,EAAUC,GAAOZ,MAAK,SAAS/B,GAC3B8H,EAAMpD,GAAS1E,EACf6H,EAAanD,GAAS6B,EACtBxB,EAAKgD,YAAYnI,eAtBrBS,GAAW,kBAAM0E,EAAKiD,wBAAwBtD,QAf1D,wCA2CsB9K,EAAM8K,GACpB,IAAIK,EAAOjJ,KACLmM,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,OAAOjH,KAAI,SAASkH,GAC7C,IAAIC,EAAYlM,EAAiBrC,EAAM8K,GACvC,GAAW,OAAPwD,EACA,IAAIE,EAAWD,EAAY,OAEvBC,EAAWF,GAAOC,EAE1B,OAAO,4BAAQpK,IAAKmK,EAAK7N,KAAK,SAASqC,UAAU,uBAAuBL,QAAS,kBAzH7F,SAAmBgM,EAAKzO,EAAM8K,EAAOwD,GAEjCtO,EAAK8J,YAAcwE,EACnBtO,EAAKc,WAAWgK,GAAOzG,KAAK,MAC5B,IAAI/C,EAAMtB,EAAKc,WAAWgK,GAAOlK,OAAS,EACtC2J,EAAYvK,EAAKc,WAAWgK,GAAOpK,QAAO,SAAAgO,GAAI,OAAa,OAATA,KAAetH,KAAI,SAAAsH,GAAI,OAAIA,EAAK,MACtFD,EAAIN,cAiBJjI,YAfA,SAASyI,IACL,GAAc,OAAVnI,EAAJ,CAIA,IAAIuC,EAAQwD,EAAmBvM,EAAM8K,GAAO,GAC5C/B,EAAMwB,UAAN,sBAAsBA,GAAtB,YAAoCvK,EAAK4O,uBACzC9F,EAAUC,GAAOZ,MAAK,SAAS/B,GAE3B,IAAIyI,EAA0B,OAApB7O,EAAK8J,YAAuB,SAAM9J,EAAK8J,YACjD9J,EAAKc,WAAWgK,GAAOxJ,GAAO,CAAC8E,EAAM,GAAIyI,GACzCJ,EAAIN,sBATJ1H,EAAWkI,KAaK,GAkGuEG,CAAU3D,EAAMnL,EAAM8K,EAAOwD,IAAMS,UAAWP,GAChIF,EAAIU,WAAW5N,QAAQ,MAAO,cAInC6N,EAAc,QAKlB,OAJIC,OAAO1F,OAAOxJ,EAAKc,YAAY4J,MAAK,SAAAO,GAAK,OAAIA,EAAMrK,OAAS,OAC5DqO,EAAc,IAGV,wBAAIzB,GAAG,2BACX,wBAAI1K,UAAU,8CACd,8BACI,yBAAKA,UAAU,eACX,2BAAOqM,QAAQ,kBAAmBrM,UAAU,iCAAkCsJ,MAAO,CAAEgD,WAAY,SAAUC,YAAa,WAA1H,2CAC4C,0BAAMvM,UAAW+H,EAAgBC,IAASA,GADtF,KAEA,yBAAKhI,UAAW,mBAAqBmM,EAAalM,KAAK,SAASsL,EAAhE,WApEpB,+CA2E6BrO,GACrB,IAAImL,EAAOjJ,KAOX,IAAMmM,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,OAAOjH,KAAI,SAASkH,GAC7C,OAAO,4BAAQnK,IAAKmK,EAAK7N,KAAK,SAASqC,UAAW,yBAA2B9C,EAAK8J,aAAewE,EAAM,SAAW,IAClG7L,QAAS,kBAP7B,SAAyB6L,GACrBtO,EAAK8J,YAAcwE,EACnBnD,EAAKgD,cAK0BmB,CAAgBhB,KAC1CA,EAAIU,WAAW5N,QAAQ,MAAO,cAIvC,OAAQ,wBAAIoM,GAAG,2BACX,wBAAI1K,UAAU,8CACd,8BACI,yBAAKA,UAAU,cACX,2BAAOA,UAAU,iCAAiCqM,QAAQ,kBAAkB/C,MAAO,CAAEgD,WAAY,SAAUC,YAAa,WAAxH,wCAEA,yBAAKvM,UAAU,kBAAkBC,KAAK,SAASsL,EAA/C,WAhGpB,+BAwGc,IAAD,OACCrO,EAAOkC,KAAKH,MAAM/B,KAEpBmN,EAA0B9K,EAAiCrC,GAC3DoN,GAAqBpN,EAAKE,aAAeF,EAAKqN,kBAElD,GAAyB,MAArBhL,EAAYrC,KAAkBoN,GAAqBD,GAA0B,CAC7E,IAAIoC,EAAW,KAEXpC,GACA,CAAC,MAAO,QAAQ/F,KAAI,SAAA0D,GAAK,OAAI,EAAKsD,wBAAwBtD,MAG1DsC,EACAmC,EAAWrN,KAAKsN,kBAAkBxP,EAAMqC,EAAerC,IAChDmN,IACPoC,EAAWrN,KAAKuN,yBAAyBzP,IAG7C,IAAMgC,EAAQE,KAAKF,MACf0N,EAAQ,CAAC,MAAO,QAAQtI,KAAI,SAAS0D,GACrC,IAAIQ,EAAaR,GAASzI,EAAerC,GACzC,OAAIoN,EACO,kBAAC,EAAD,CAAkBjJ,IAAK2G,EAAOA,MAAOA,EACnBG,MAAOjL,EAAKc,WAAWgK,GACvBP,UAAWvK,EAAK4O,qBAChBrD,eAAgBD,IAClC6B,EACA,kBAAC,EAAD,CAAuBhJ,IAAK2G,EAAOA,MAAOA,EAAOG,MAAOjJ,EAAM8L,iBAAiBhD,UADnF,KAKX,OAAQ,yBAAKhI,UAAU,4CAA4C0K,GAAG,aAClE,yBAAK1K,UAAU,aACX,yBAAKA,UAAU,OACX,2BAAOA,UAAU,cAAcsJ,MAAO,CAAEuD,cAAe,cACnD,+BACKJ,EACAG,OAOrB,OAAO,kCArJnB,GAAkC1M,IAAMC,W,0BC3NtB2M,EAAQ,K,IAWpBC,E,YACJ,WAAY9N,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXhC,KAAM,MAHS,E,yFAOSA,GAC1BkC,KAAKC,SAAS,CAAE,KAAQ+M,OAAOY,OAAO,GAAI9P,O,+BAI1C,IAAMA,EAAOkC,KAAKF,MAAMhC,MAAQ,GAChC,OACE,6BACE,kBAAC,EAAD,CAAQqN,kBAAmBrN,EAAKqN,kBAAmB0C,aAAc/P,EAAKE,cACtE,kBAAC8P,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWhQ,KAAMkC,KAAKF,MAAMhC,Y,GAnBjBgD,IAAMC,WAyBnBgN,E,iLAEF,IAAMjQ,EAAOkC,KAAKH,MAAM/B,KAExB,OAAa,OAATA,EACK,8BACiB,OAAfA,EAAKC,MACP,uBAAG6C,UAAU,QAAb,IAAsB9C,EAAKC,OAGhC,6BACE,6BACE,kBAAC,EAAD,CAA2BD,KAAMA,IACjC,kBAAC,EAAD,CAAoBA,KAAMA,KAE5B,yBAAK8C,UAAU,yBACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAc9C,KAAMA,IACpB,kBAAC,EAAD,CAAOA,KAAMA,W,GAlBHgD,IAAMC,WA4B9B,SAAS+M,IACP,OAAQ,yBAAKlN,UAAU,aAAa0K,GAAG,cAAc0C,SAAS,KAAKnN,KAAK,SAASoN,kBAAgB,oBAAoBC,cAAY,QAC/H,yBAAKtN,UAAU,eAAeC,KAAK,YACjC,yBAAKD,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAc0K,GAAG,qBAA/B,eACA,4BAAQ/M,KAAK,SAASqC,UAAU,QAAQuN,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKtN,UAAU,cACb,mFAEA,sDAA2B,yCAA3B,SAAkD,wCAAlD,KAEA,4CAAiB,mCAAjB,iDAEA,oGAAyE,yCAAzE,SAAgG,wCAAhG,8DAEA,mKAAwI,6CAAxI,SAAmK,wCAAnK,MAEF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,eAAeN,KAAK,wDAAjC,SACA,uBAAGM,UAAU,eAAeN,KAAK,uCAAjC,c,IAQJ+N,E,YACF,WAAYxO,GAAQ,qEACVA,I,sEAEA,IAAD,OACHoJ,EAAOjJ,KAkBX,OAAQ,yBAAKY,UAAU,aAAa0K,GAAG,iBAAiB0C,SAAS,KAAKnN,KAAK,SAASoN,kBAAgB,uBAAuBC,cAAY,QACrI,yBAAKtN,UAAU,eAAeC,KAAK,YACjC,yBAAKD,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAc0K,GAAG,qBAA/B,YACA,4BAAQ/M,KAAK,SAASqC,UAAU,QAAQuN,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAIJ,yBAAKtN,UAAU,cACb,8BACE,yBAAKA,UAAU,cACb,2BAAOA,UAAU,gBAAjB,gCAC+B,6BAC7B,sJAEF,yBAAKA,UAAU,cACb,2BAAOA,UAAU,mBAAmBrC,KAAK,WAAW2F,MAAM,GAAGoH,GAAG,iBAChE,2BAAO1K,UAAU,mBAAmBqM,QAAQ,gBAA5C,iDAKJ,6BACA,yBAAKrM,UAAU,cACb,2BAAOqM,QAAQ,OAAOrM,UAAU,gBAAhC,YAGA,4BAAQA,UAAU,eAAe0K,GAAG,QAClC,4BAAQpH,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,6BAGJ,6BACA,yBAAKtD,UAAU,cACb,2BAAOA,UAAU,gBAAjB,yBACwB,6BACtB,4ZAIF,yBAAKA,UAAU,cACb,2BAAOA,UAAU,mBAAmBrC,KAAK,WAAW2F,MAAM,GAAGoH,GAAG,qBAChE,2BAAO1K,UAAU,mBAAmBqM,QAAQ,oBAA5C,oBAKJ,6BAEA,yBAAKrM,UAAU,cACb,2BAAOqM,QAAQ,OAAOrM,UAAU,gBAAhC,iBACgB,6BACd,2LAEF,4BAAQA,UAAU,eAAe0K,GAAG,QAClC,4BAAQpH,MAAM,KAAd,cACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,eACA,4BAAQA,MAAM,eAAd,wBACA,4BAAQA,MAAM,OAAd,iCAGJ,6BAEA,yBAAKtD,UAAU,cACb,2BAAOA,UAAU,gBAAjB,sBACqB,6BACnB,iKAEF,yBAAKA,UAAU,cACb,2BAAOA,UAAU,mBAAmBrC,KAAK,WAAW2F,MAAM,GAAGoH,GAAG,eAAeuB,UAAQ,IACvF,2BAAOjM,UAAU,mBAAmBqM,QAAQ,gBAA5C,8BAC6B,gDAIjC,6BACA,yBAAKrM,UAAU,cACb,2BAAOA,UAAU,gBAAjB,qBACoB,6BAClB,sGAEF,2BAAOrC,KAAK,SAASqC,UAAU,oCAAoC0K,GAAG,iBAAiBpH,MAAM,QAAQ3D,QAvGjH,WAEI0I,EAAKM,OAAOC,KAAK,CACbC,KAAO,yBAAK7I,UAAU,mCACZ,oGAEV+I,QAAS,CACLC,IAAOC,eACPD,IAAOE,UAAS,WACZwE,eAAeC,WAAW,mBAC1B7O,OAAO8O,SAASC,aAGxBxE,OAAQ,WA0F0HkE,eAAa,UAC3I,kBAAC,IAAD,CAAQhE,IAAK,SAACC,GAAgB,EAAKb,OAASa,e,GA9GlCtJ,IAAMC,WA2H5B2N,E,iLACM,IAAD,EACP,OACE,yBAAK9N,UAAU,0DAA0D0K,GAAG,eAC1E,uBAAG1K,UAAU,eAAeN,KAAK,qBAAjC,iBAGE,2BAAOgL,GAAG,WAAWpB,MAAO,CAAEtB,MAAO,SAHvC,OAKE,2BAAO0C,GAAG,YAAYpB,MAAO,CAAEtB,MAAO,UALxC,kBAWA,4BAAQhI,UAAU,iBAAiBrC,KAAK,SAASoQ,cAAY,WAAWC,cAAY,QAAQC,gBAAc,OAAOC,gBAAc,QAAQV,aAAW,qBAChJ,0BAAMxN,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B0K,GAAG,QAE3C,wBAAI1K,UAAU,mCAEZ,wBAAIA,UAAU,qBACZ,uBAAGA,UAAU,WAAWN,KAAK,IAAIO,KAAK,SAAS8N,cAAY,WAAWI,gBAAc,OAAOD,gBAAc,SACvG,yBAAKE,IAAI,sBAAsBpO,UAAU,gBAD3C,iBAGA,yBAAKA,UAAU,iBACb,wBAAIF,MAAM,mBAAV,WACA,uBAAGE,UAAaZ,KAAKH,MAAMsL,mBAAsBnL,KAAKH,MAAMgO,aAAyC,gBAAzB,uBAA0CvN,KAAK,IAAIgL,GAAG,SAChI,yBAAK0D,IAAI,kBAAkBpO,UAAU,gBADvC,aAGA,uBAAGA,WAAaZ,KAAKH,MAAMsL,mBAAqBnL,KAAKH,MAAMgO,aAAgB,uBAAyB,gBAAiBvN,KAAK,IAAIgL,GAAG,cAC/H,yBAAK0D,IAAI,sBAAsBpO,UAAU,gBAD3C,qBAGA,wBAAIF,MAAM,mBAAV,cACA,uBAAGE,UAAYZ,KAAKH,MAAMsL,oBAAsBnL,KAAKH,MAAMgO,aAAgB,uBAAyB,gBAAiBvN,KAAK,IAAIgL,GAAG,mBAC/H,yBAAK0D,IAAI,gBAAgBpO,UAAU,gBADrC,qBAGA,uBAAGA,UAAYZ,KAAKH,MAAMsL,mBAAqBnL,KAAKH,MAAMgO,aAAgB,uBAAyB,gBAAiBvN,KAAK,IAAIgL,GAAG,qBAC9H,yBAAK0D,IAAI,eAAepO,UAAU,gBADpC,2BAOJ,wBAAIA,UAAU,YAAW,uBAAGN,KAAK,IAAIgL,GAAG,QAAQ1K,UAAU,YACxD,yBAAKoO,IAAI,kBAAkBpO,UAAU,gBADd,cAOzB,wBAAIA,UAAU,YAAW,uBAAGN,KAAK,IAAIgL,GAAG,QAAQ1K,UAAU,WAAW+N,cAAY,QAAQC,cAAY,mBACnG,yBAAKI,IAAI,qBAAqBpO,UAAU,gBADjB,iBAMzB,wBAAIA,UAAU,YAAW,uBAAGN,KAAK,iCAAiCgL,GAAG,UAAU1K,UAAU,YACvF,yBAAKoO,IAAI,kBAAkBpO,UAAU,gBADd,eAKzB,wBAAIA,UAAU,YAAW,uBAAGN,KAAK,IAAIgL,GAAG,QAAQ1K,UAAU,WAAW+N,cAAY,QAAQC,cAAY,gBACnG,yBAAKI,IAAI,iBAAiBpO,UAAU,gBADb,eAW3B,0BAAMA,UAAU,4BACd,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmB0K,GAAG,gBAAtC,SAEF,8BAAO1K,UAAU,eAAerC,KAAK,QAArC,0BAAsD,gBAAtD,mBAAwE,QAAxE,4BACc,QADd,4BACiC,WADjC,+BAC0D,UAD1D,sBACyE,wDADzE,Y,GA/EOuC,IAAMC,WA0FZkO,EAlTf,WAIE,OAFAC,IAAQC,iBAAiBC,SAGvB,kBAAC,EAAD,CAAMjF,IAAK,SAACkF,GAAoB3P,OAAO2P,cAAgBA,MCT3DC,IAAS3P,OAAO,kBAAC,EAAD,MAAS4P,SAASC,eAAe,U,iBCLjD,SAASC,EAAoBC,GAC5B,IAAI9N,EAAI,IAAIwE,MAAM,uBAAyBsJ,EAAM,KAEjD,MADA9N,EAAE+N,KAAO,mBACH/N,EAEP6N,EAAoBG,KAAO,WAAa,MAAO,IAC/CH,EAAoBnK,QAAUmK,EAC9BI,EAAOC,QAAUL,EACjBA,EAAoBnE,GAAK,I","file":"static/js/main.40bd09ab.chunk.js","sourcesContent":["export function human_cluemaster_hints_needed(game) {\n    return !game.error && game.allrevealed && game.human_cluemaster_hints;\n}\n\nexport function get_lang(game) {\n    return game.seed.split('-', 2)[0]\n}\n\n// TODO(szymon): update logic\nexport function next_player(game) {\n    const red_tiles = game.type.filter(x => x == 'r').length;\n    const blue_tiles = game.type.filter(x => x == 'b').length;\n    const starting_player = (red_tiles > blue_tiles) ? 'red' : 'blue';\n\n    const red_clues = game.auto_clues.red.length;\n    const blue_clues = game.auto_clues.blue.length;\n    if (red_clues < blue_clues) {\n        return 'red';\n    } else if (blue_clues < red_clues) {\n        return 'blue';\n    } else {\n        return starting_player;\n    }\n}\n\n// TODO(mib): how do we share this with index.html?\nexport function get_remaining(game, c) {\n    c = c.replace('blue', 'b').replace('red', 'r');\n    var res = 0;\n    for (var idx = 0; idx < game.num_rows * game.num_cols; idx += 1) {\n        if (!game.revealed[idx] && game.type[idx] == c) {\n            res += 1;\n        }\n    }\n    return res;\n}\n\nexport function get_full_releaved_color(game) { \n    if (get_remaining(game, 'e') == 0) {\n        return 'black';\n    } else if (get_remaining(game, 'r') == 0) {\n        return 'red';\n    } else if (get_remaining(game, 'b') == 0) {\n        return 'blue';\n    } else {\n        return null;\n    }\n}","import React from 'react';\n\nimport * as gu from './GameUtils.js';\n\n\nfunction toggle_reveal(idx) {\n    /* This function needs to write to window state\n    because some js is not ported to react yet */\n    let game = window.game;\n    game.revealed[idx] = !game.revealed[idx];\n    window.render();\n}\n\n\nexport class BoardNotifications extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {hidden: false}\n    }\n\n    hide() {\n        this.setState({hidden: true});\n    }\n\n    render() {\n        const game = this.props.game; \n        var revealed_color = gu.get_full_releaved_color(game)\n\n        // when not in spymaster mode and the game is won show who has won.\n        var winner_box = null;\n        if (!game.allrevealed && revealed_color !== null) {\n            if (!this.state.hidden) {\n                var exit = <a href=\"#\" onClick={this.hide.bind(this)}><div class=\"float-right close\" >&times;</div></a>\n                var winner = null;\n                if (revealed_color == 'blue') {\n                    winner = (<div><span className=\"text-primary\">blue</span> has won the game.{exit}</div>);\n                } else if (revealed_color == 'red') {\n                    winner = (<div><span className=\"text-danger\">red</span> has won the game.{exit}</div>);\n                } else if (revealed_color == 'black') {\n                    winner = (<div>black word was releaved.{exit}</div>);\n                }\n                winner_box = (<div className=\"alert alert-info\" role=\"alert\">\n                    {winner} \n                </div>);\n            } \n        } else {\n            this.state.hidden = false;\n        }\n        return winner_box\n    }\n}\n\nexport class Board extends React.Component {\n    render() {\n        const game = this.props.game; \n        const show_all_colors = game.allrevealed || (gu.get_full_releaved_color(game) !== null)\n\n        let boardRows = [];\n        for (let i = 0; i < game.num_rows; i += 1) {\n            let rowCells = [];\n            for (let j = 0; j < game.num_cols; j += 1) {\n                let idx = i * game.num_cols + j;\n\n                let revealStyle = \"cell-inrevealed\";\n                const colorStyleDict = {\n                    r: \"cell-red\",\n                    b: \"cell-blue\",\n                    n: \"cell-neutral\",\n                    e: \"cell-end\",\n                }\n                let colorStyle = '';\n                let cellStrike = '';\n                if (game.revealed[idx] || show_all_colors) {\n                    revealStyle = \"cell-revealed\";\n                    colorStyle = colorStyleDict[game.type[idx]];\n                    if (game.revealed[idx] && show_all_colors) {\n                        cellStrike = \"cell-strike\";\n                    }\n                }\n                var handlers = {onClick: () => toggle_reveal(idx)};\n                if (game.require_double_click) {\n                    handlers = {\n                        onDoubleClick: () => toggle_reveal(idx),\n                        // onTouchEnd=() => toggle_reveal(idx),\n                    }\n                }\n                let cell = (\n                    <td\n                        className={`cell-style word ${revealStyle} ${colorStyle} ${cellStrike}`}\n                        key={idx}\n                        {...handlers}\n                    >\n                        <span className=\"cell-text\" >\n                            {game.words[idx]}\n                        </span>\n                    </td>\n                );\n                rowCells.push(cell);\n            }\n            boardRows.push(\n                <tr key={i}>{rowCells}</tr>\n            );\n        }\n\n        return (\n            <div className=\"col\">\n                {/* Non-react stuff binds here */}\n                <table className=\"table-style\"><tbody>{boardRows}</tbody></table>\n            </div>\n        );\n    }\n}\n","// source: https://raw.githubusercontent.com/DVLP/localStorageDB/master/localStorageDB.js\nvar indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\nif (!indexedDB) {\n  console.error('indexDB not supported');\n}\nvar db,\n  keyValue = {\n    k: '',\n    v: ''\n  },\n  request = indexedDB.open('d2');\nrequest.onsuccess = function(evt) {\n  db = this.result;\n};\nrequest.onerror = function(event) {\n  console.error('indexedDB request error');\n  console.log(event);\n};\n\nrequest.onupgradeneeded = function(event) {\n  db = null;\n  var store = event.target.result.createObjectStore('str', {\n    keyPath: 'k'\n  });\n\n  store.transaction.oncomplete = function (e){\n    db = e.target.db;\n  };\n};\n\nfunction getValue(key, callback) {\n  if(!db) {\n    setTimeout(function () {\n      getValue(key, callback);\n    }, 100);\n    return;\n  }\n  db.transaction('str').objectStore('str').get(key).onsuccess = function(event) {\n    var result = (event.target.result && event.target.result.v) || null;\n    callback(result);\n  };\n}\n\nfunction setValue(key, value) {\n  // no callback for set needed because every next transaction will be anyway executed after this one\n  keyValue.k = key;\n  keyValue.v = value;\n  db.transaction('str', 'readwrite').objectStore('str').put(keyValue);\n}\n\nvar ldb = {get: getValue, set: setValue}\nexport default ldb;","import * as tf from '@tensorflow/tfjs';\nimport ldb from  './localStorageDB.js';\n\n\nvar storage_key = \"recommendation\";\nvar vec_shape = [-1, 300]\n\nvar query_cache = {}\nexport var model = null;\n\n\nexport function load_model(callback) {\n    // ensure there's enough storage to store the model\n    var vec = null;\n    var word = null;\n    var common_words = null;\n    var other_word_forms = null;\n\n    function process_data() {\n        var word_to_idx = {}\n        for (var i = 0; i < word.length; i++) {\n            word_to_idx[word[i]] = i;\n        }\n        model = {\n            vec: tf.tensor(vec).reshape(vec_shape),\n            word: word,\n            word_to_idx: word_to_idx,\n            common_words: common_words,\n            common_words_stems_set: new Set(common_words.map(word => word.stem())),\n            other_word_forms: other_word_forms,\n        };\n        console.log('model loaded');\n        if (callback) {\n            callback(model);\n        }\n    }\n\n    function on_ldb_ready(value) {\n        if (value === null) {\n            console.log(\"fetching model for the first time.\");\n\n            var vec_promise = new Promise(function(resolve, reject) {\n                var oReq = new XMLHttpRequest();\n                oReq.addEventListener(\"load\", function(event) {\n                    vec = new Float32Array(event.target.response);\n                    resolve();\n                });\n                oReq.open(\"GET\", \"recommend/vec.bytes\");\n                oReq.responseType = \"arraybuffer\";\n                oReq.send();\n            });\n\n            var word_promise = new Promise(function(resolve, reject) {\n                var oReq = new XMLHttpRequest();\n                oReq.addEventListener(\"load\", function(event) {\n                    word = event.target.response['word'];\n                    common_words = event.target.response['common_words'];\n                    other_word_forms =  event.target.response['other_word_forms']\n                    resolve();\n                });\n                oReq.open(\"GET\", \"recommend/word.json\");\n                oReq.responseType = \"json\";\n                oReq.send();\n            })\n\n            Promise.all([vec_promise, word_promise]).then(function() {\n                ldb.set(storage_key, [vec, word, common_words, other_word_forms])\n                process_data();\n            })\n        } else {\n            console.log(\"loading model from local storage.\");\n            vec = value[0];\n            word = value[1];\n            common_words = value[2];\n            other_word_forms = value[3];\n            process_data();\n        }\n    }\n\n    ldb.get(storage_key, on_ldb_ready);\n}\n\nfunction word_to_vec(word) {\n    var idx = model.word_to_idx[word];\n    if (idx === undefined) {\n        throw Error(\"Cannot find word \" + word + \" in dictionary.\");\n    }\n    return model.vec.slice(idx, 1);\n\n}\n\nfunction get_distances(target_vec) {\n    return model.vec.mul(target_vec).sum(-1, true).mul(-1).add(1)\n}\n\nfunction distances_to_words(word_list) {\n    var res = [];\n    for (var word of word_list) {\n        res.push(get_distances(word_to_vec(word)))\n    }\n    return tf.concat(res, -1);\n}\n\nexport function recommend(query) {\n    console.log(\"query\", query);\n\n    return new Promise(function(resolve, reject) {\n        const res = tf.tidy(function() {\n            // this is tiny big hacky - I use tensor.mul(-1).topk to emulate sort.\n            var fail_and_bad_score = null;\n            if (query.fail.length > 0) {\n                var fail_dist = distances_to_words(query.fail)\n                fail_and_bad_score = fail_dist.min(-1).mul(0.5);\n            }\n            if (query.bad.length > 0) {\n                var bad_dist = distances_to_words(query.bad);\n                var bad_score = bad_dist.mul(-1).topk(bad_dist.shape[1], true).values.slice([0, query.risk], [-1, 1]).mul(-1).squeeze();\n                if (fail_and_bad_score === null) {\n                    fail_and_bad_score = bad_score;\n                } else {\n                    fail_and_bad_score = tf.minimum(bad_score, fail_and_bad_score);\n                }\n            }\n\n            var good_dist = distances_to_words(query.good);\n            var good_score = good_dist.mul(-1).topk(good_dist.shape[1], true).values.slice([0, query.num_guesses - 1], [-1, 1]).squeeze();\n\n            var score = good_score;\n            if (fail_and_bad_score !== null) {\n                score = score.add(fail_and_bad_score);\n            }\n            var best_scores = score.topk(300);\n            var best_candidates = best_scores.indices.arraySync()\n\n            var forbidden_words = new Set()\n\n            function forbid_word(word) {\n                forbidden_words.add(word);\n                forbidden_words.add(word + 's');\n                forbidden_words.add(word + 'ing');\n                forbidden_words.add(word + 'ings');\n                forbidden_words.add(word + 'ed');\n                forbidden_words.add(word.stem());\n                (model.other_word_forms[word] || []).forEach(function(word_form) {\n                    forbidden_words.add(word_form);\n                });\n            }\n\n            var most_common_words = model.common_words.slice(0, 100);\n            for (var word of [...query.good, ...query.bad, ...query.fail, ...(query.blacklist || []), ...most_common_words]) {\n                forbid_word(word)\n            }\n            var res = []\n            for (var candidate_idx of best_candidates) {\n                const word = model.word[candidate_idx];\n                const forms = [word].concat(model.other_word_forms[word] || []);\n                if(forms.some(word => forbidden_words.has(word))) {\n                    continue\n                }\n\n                if (query.use_common_words && !model.common_words_stems_set.has(word.stem())) {\n                    continue\n                }\n                if (word.length <= 2) {\n                    // short 2 letter clues are generally bad.\n                    continue;\n                }\n                res.push(word);\n                forbid_word(word);\n            }\n            return res\n        });\n        resolve(res);\n    });\n}\n\nexport function demo_recommend() {\n    load_model(function() {\n        var promise = recommend([\"church\", \"cat\", \"atlantis\"], [\"eye\", \"aztec\", \"buck\", \"pin\", \"hospital\"], [\"fair\"], 1, 3);\n        promise.then(function(value) { console.log(value.slice(0, 5)); });\n    });\n}\n","import React from 'react';\nimport * as gu from './GameUtils.js';\nimport {model, load_model, recommend} from './recommend.js';\nimport Dialog from 'react-bootstrap-dialog';\nfunction color_to_flavor(color) {\n    return (color == 'red') ? 'text-danger' : 'text-primary';\n}\n\n\nclass CluemasterHintWordBox extends React.Component {\n\n    render() {\n     \n        var flavor = color_to_flavor(this.props.color);\n        var clues = this.props.clues.slice(0, 5);\n        var word_list = [];\n\n        if (clues.length == 0) {\n            word_list.push(<div key=\"spinner\" className={\"spinner-grow spinner-grow-sm align-middle \" + flavor} role=\"status\"/>);\n        } else {\n            for (var i = 0; i < clues.length; i++) {\n                word_list.push(<span key={'clue-' + i} className={flavor}> {clues[i]} </span>);\n                if (i + 1 < clues.length) {\n                    word_list.push(<br key={'br-' + i} />);\n                }\n            }\n        }\n        return (<tr>\n            <td className=\"recommend-box cell-style align-middle\">\n                {word_list}\n            </td>\n        </tr>);\n    }\n}\n\nclass AutoCluesWordBox extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const word_list = [];\n\n        var flavor = color_to_flavor(this.props.color);\n        var clues = this.props.clues;\n\n        if (clues.length == 0) {\n            word_list.push(<span key=\"no-clue\" className=\"text-{flavor}\"> No clues.</span>);\n        } else {\n            for (var i = 0; i < clues.length; i++) {\n                if (clues[i] === null) {\n                    word_list.push(<div key={'spinner-' + i} className={\"spinner-grow spinner-grow-sm align-middle \" + flavor} role=\"status\" />)\n                } else {\n                    var self = this;\n                    const word_idx = i;\n                    const highlight = (i + 1 == clues.length && this.props.highlight_last);\n                    const opacity = highlight ? 1.0 : 0.4;\n\n                    function delete_clue() {\n                        self.dialog.show({\n                            body: (<div className=\"text-center delete-clue-confirm\">\n                                      <span>Are you sure you want to delete this clue?</span>\n                                      <br />\n                                      <span className={flavor}>{clues[word_idx].join(' ')}</span>\n                                      <br />\n                                      <span>This action cannot be undone.</span>\n                                  </div>),\n                            actions: [\n                                Dialog.CancelAction(),\n                                Dialog.OKAction(function() {\n                                    const [removed_word, removed_cnt] = self.props.clues.splice(word_idx, 1)[0];\n                                    self.props.blacklist.push(removed_word);\n                                    window.render();\n                                })\n                            ],\n                            bsSize: 'small',\n                        });\n                    }\n                    var deletebtn = null;\n                    if (highlight) {\n                        var deletebtn = <a href=\"#\" onClick={delete_clue} className=\"text-secondary\" style={{'opacity': 0.4}}>&times;</a>;\n                    }\n                    word_list.push(<span key={'clue-' + i} style={{opacity: opacity}} className={flavor}> \n                        <Dialog ref={(component) => { this.dialog = component;}} />\n                        {clues[i].join(' ')}&nbsp;{deletebtn}\n                    </span>);\n                }\n                if (i + 1 < clues.length) {\n                    word_list.push(<br key={'br-' + i} />);\n                }\n            }\n        }\n        return (<tr>\n            <td className=\"recommend-box cell-style\">\n                {word_list}\n            </td>\n        </tr>);\n    }\n}\n\nfunction hash(str) {\n    var i = str.length\n    var hash1 = 5381\n    var hash2 = 52711\n\n    while (i--) {\n        const char = str.charCodeAt(i)\n        hash1 = (hash1 * 33) ^ char\n        hash2 = (hash2 * 33) ^ char\n    }\n\n    return (hash1 >>> 0) * 4096 + (hash2 >>> 0)\n}\n\nfunction get_query_and_hash(game, color) {\n    var w = {r: [], b: [], n: [], e: []};\n\n    for (var idx = 0; idx < game.num_rows * game.num_cols; idx += 1) {\n        if (!game.revealed[idx] && game.words[idx] !== null) {\n            w[game.type[idx]].push(game.words[idx])\n        }\n    }\n\n    if (color == 'blue') {\n        var good = w.b;\n        var bad = w.r.concat(w.n);\n    } else {\n        var good = w.r\n        var bad = w.b.concat(w.n);\n    }\n    var fail = w.e;\n    if (good.length == 0) {\n        return [null, null];\n    }\n    if (game.num_guesses == 'all') {\n        var num_guesses = good.length;\n    } else {\n        var num_guesses = Math.min(good.length, parseInt(game.num_guesses));\n    }\n    if (game.risk == 'allbutblack') {\n        bad = [];\n        var risk = 0;\n    } else if (game.risk == 'all') {\n        bad = [];\n        fail = [];\n        var risk = 0;\n    } else {\n        var risk = Math.min(parseInt(game.risk), bad.length);\n    }\n\n    var query = {good: good, bad: bad, fail: fail, risk: risk, num_guesses: num_guesses, use_common_words: game.use_common_words};\n    var query_hash = 'good:' + good.join(',') + ' bad:' + bad.join(',') +' fail:' + fail.join(',') +\n                     ' risk:' + risk + ' num_guesses:' + num_guesses + ' common_words:' + game.use_common_words;\n    query_hash = hash(query_hash);\n    return [query, query_hash];\n}\n\nfunction next_clue(box, game, color, val) {\n\n    game.num_guesses = val;\n    game.auto_clues[color].push(null);\n    var idx = game.auto_clues[color].length - 1\n    var blacklist = game.auto_clues[color].filter(clue => clue !== null).map(clue => clue[0]);\n    box.forceUpdate(); // TODO(mib): why do we need this?\n\n    function update_word() {\n        if (model === null) {\n            load_model(update_word);\n            return;\n        }\n        var query = get_query_and_hash(game, color)[0]\n        query.blacklist = [...blacklist, ...game.auto_clues_blacklist];\n        recommend(query).then(function(value) {\n            // TODO: blacklist\n            var ng = (game.num_guesses == 'all' ? '∞' : game.num_guesses);\n            game.auto_clues[color][idx] = [value[0], ng];\n            box.forceUpdate(); // TODO(mib): why do we need this?\n        });\n    }\n\n    setTimeout(update_word, 0);\n}\n\nexport class RecommendBoxNotifications extends React.Component {\n    render() {\n        const game = this.props.game;\n        var cluemaster_hints_needed = gu.human_cluemaster_hints_needed(game);\n        var auto_clues_needed = !game.allrevealed && game.enable_auto_clues;\n        var clues_needed = (cluemaster_hints_needed || auto_clues_needed);\n        var langauge_available = (gu.get_lang(game) == 'en');\n\n        var res = [];\n\n        if (clues_needed) {\n            // css hides this when screen is not portrait\n            res.push(<div key=\"lang\" className=\"form-group d-block d-sm-none\" id=\"ai-clues-phone-warning\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    Auto clues are not currently supported in portrait mode. Flip your phone.\n                </div>\n            </div>);\n        }\n\n        if (clues_needed && !langauge_available) {\n            res.push(<div key=\"phone\" id=\"recommend-lang-warning\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                Auto clues currently only work in english.\n                </div>\n            </div>);\n        }\n        return <div>{res}</div>;\n    }\n}\n\n// TODO(szymon): this really should not require threads.\nfunction throttled_execute(queue) {\n    if (queue.length == 0) {\n        setTimeout(() => throttled_execute(queue), 250);\n    } else {\n        var next_request = null;\n        while(queue.length > 0) {\n            next_request = queue.shift();\n        }\n        next_request(() => throttled_execute(queue));\n    }\n}\n\nexport class RecommendBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cluemaster_hints: {red: [], blue: []},\n            cluemaster_hints_hash: {red: null, blue: null},\n        };\n        this.cluemaster_hints_jobs = {red: [], blue: []};\n        setTimeout(() => throttled_execute(this.cluemaster_hints_jobs['red']), 0);\n        setTimeout(() => throttled_execute(this.cluemaster_hints_jobs['blue']), 0);\n    }\n\n    update_cluemaster_hints(color) {\n        var self = this;\n        if (model === null) {\n            load_model(() => self.update_cluemaster_hints(color));\n            return;\n        }\n        var [query, query_hash] = get_query_and_hash(this.props.game, color);\n        var current_hash = this.state.cluemaster_hints_hash;\n        var hints = this.state.cluemaster_hints;\n\n        if (query_hash === null) {\n            hints[color] = ['no words left to guess.']\n            current_hash[color] = null;\n            return;\n        }\n\n        if (current_hash[color] == query_hash) {\n            return;\n        }\n        hints[color] = [];\n\n        this.cluemaster_hints_jobs[color].push(callback => {\n            recommend(query).then(function(value) {\n                hints[color] = value;\n                current_hash[color] = query_hash;\n                self.forceUpdate(callback);\n            });\n        });\n\n    }\n\n    autoclues_control(game, color) {\n        var self = this;\n        const buttons = [1, 2, 3, 4, \"all\"].map(function(val) {\n            var remaining = gu.get_remaining(game, color);\n            if (val == \"all\") {\n                var enabled = (remaining > 0);\n            } else {\n                var enabled = (val <= remaining);\n            }\n            return <button key={val} type=\"button\" className=\"btn btn-light btn-sm\" onClick={() => next_clue(self, game, color, val)} disabled={!enabled}>\n                {val.toString().replace('all', '∞')}\n            </button>;\n        })\n\n        var maybe_shake = \"shake\";\n        if (Object.values(game.auto_clues).some(clues => clues.length > 0)) {\n            maybe_shake = \"\";\n        }\n\n        return (<tr id=\"auto-cluemaster-control\">\n            <td className=\"cell-style align-middle cluemaster-control\">\n            <form>\n                <div className=\"form-group \">\n                    <label htmlFor=\"auto-cluemaster\"  className=\"d-sm-none d-md-none d-lg-block\"  style={{ marginLeft: '0.5rem', marginRight: '0.5rem' }}>\n                        Select the number of words to guess for <span className={color_to_flavor(color)}>{color}</span>.</label>\n                    <div className={\"btn-group w-100 \" + maybe_shake} role=\"group\">{buttons} </div>\n                </div>\n            </form>\n            </td>\n        </tr>)\n    }\n\n    cluemaster_hints_control(game) {\n        var self = this;\n\n        function set_num_guessed(val) {\n            game.num_guesses = val;\n            self.forceUpdate();\n        }\n\n        const buttons = [1, 2, 3, 4, \"all\"].map(function(val) {\n            return <button key={val} type=\"button\" className={\"btn btn-light btn-sm \" + (game.num_guesses == val ? 'active' : '')} \n                            onClick={() => set_num_guessed(val)}>\n                {val.toString().replace('all', '∞')}\n            </button>;\n        })\n\n        return (<tr id=\"auto-cluemaster-control\">\n            <td className=\"cell-style align-middle cluemaster-control\">\n            <form>\n                <div className=\"form-group\">\n                    <label className=\"d-sm-none d-md-none d-lg-block\" htmlFor=\"auto-cluemaster\" style={{ marginLeft: '0.5rem', marginRight: '0.5rem' }}>\n                        Select the number of words to guess.</label>\n                    <div className=\"btn-group w-100\" role=\"group\">{buttons} </div>\n\n                </div>\n            </form>\n            </td>\n        </tr>)\n    }\n\n    render() {\n        const game = this.props.game;\n\n        var cluemaster_hints_needed = gu.human_cluemaster_hints_needed(game);\n        var auto_clues_needed = !game.allrevealed && game.enable_auto_clues;\n\n        if (gu.get_lang(game) == 'en' && (auto_clues_needed || cluemaster_hints_needed)) {\n            var controls = null;\n\n            if (cluemaster_hints_needed) {\n                ['red', 'blue'].map(color => this.update_cluemaster_hints(color));\n            }\n\n            if (auto_clues_needed) {\n                controls = this.autoclues_control(game, gu.next_player(game));\n            } else if (cluemaster_hints_needed) {\n                controls = this.cluemaster_hints_control(game);\n            }\n\n            const state = this.state;\n            var boxes = ['red', 'blue'].map(function(color) {\n                var highlight = (color != gu.next_player(game));\n                if (auto_clues_needed) {\n                    return <AutoCluesWordBox key={color} color={color} \n                                             clues={game.auto_clues[color]} \n                                             blacklist={game.auto_clues_blacklist} \n                                             highlight_last={highlight} />;\n                } else if (cluemaster_hints_needed) {\n                    return <CluemasterHintWordBox key={color} color={color} clues={state.cluemaster_hints[color]} />\n                }\n            })\n                \n            return (<div className=\"col-3 col-lg-2 collapse d-none d-sm-block\" id=\"recommend\">\n                <div className=\"row h-100\">\n                    <div className=\"col\" >\n                        <table className=\"table-style\" style={{ borderSpacing: '0rem 1rem' }}>\n                            <tbody>\n                                {controls}\n                                {boxes}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>);\n        } else {\n            return <div />\n        }\n\n    }\n};\n\n","import React from 'react';\nimport { Board, BoardNotifications } from './Board.js';\nimport { RecommendBox, RecommendBoxNotifications } from './RecommendBox.js';\nimport './App.css';\nimport natural from 'natural';\nimport Dialog from 'react-bootstrap-dialog';\n\nconst Immutable = require('immutable');\n\nfunction App() {\n  // needed for recommend.js\n  natural.LancasterStemmer.attach();\n\n  return (\n    <Game ref={(gameComponent) => { window.gameComponent = gameComponent }} />\n  );\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: null,\n    };\n  }\n\n  updateStateFromLegacyRender(game) {\n    this.setState({ 'game': Object.assign({}, game) });\n  }\n\n  render() {\n    const game = this.state.game || {};\n    return (\n      <div>\n        <NavBar enable_auto_clues={game.enable_auto_clues} all_revealed={game.allrevealed} />\n        <AboutModal />\n        <SettingsModal />\n        <GamePanel game={this.state.game} />\n      </div>\n    );\n  }\n}\n\nclass GamePanel extends React.Component {\n  render() {\n    const game = this.props.game;\n\n    if (game === null) {\n      return <div />;\n    } else if (game.error !== null) {\n      return <p className=\"lead\"> {game.error}</p>;\n    } else {\n      return (\n        <div>\n          <div>\n            <RecommendBoxNotifications game={game} />\n            <BoardNotifications game={game} />\n          </div>\n          <div className=\"container-fluid h-100\">\n            <div className=\"row h-100\">\n              <RecommendBox game={game} />\n              <Board game={game} />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\n\nfunction AboutModal() {\n  return (<div className=\"modal fade\" id=\"about-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"about-modal-label\" aria-hidden=\"true\">\n    <div className=\"modal-dialog\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"about-modal-label\">About Words</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <p>Simple website to keep track of codenames-like game.</p>\n\n          <p>To see all words select <b>Give Clues</b> from <b>Game Mode</b>.</p>\n\n          <p>Type the same <b>seed</b> on a different device to get the same words.</p>\n\n          <p>The clues can be suggested by the computer automatically. Just select <b>Auto Clues</b> from <b>Game Mode</b>. In this mode you can play the game with just two people!</p>\n\n          <p>If you don't want the computer to completely take over, you can just look at its suggestions and pick the clue yourself. Just select <b>Assisted Clues</b> from <b>Game Mode</b>.</p>\n        </div>\n        <div className=\"modal-footer\">\n          <a className=\"btn btn-info\" href=\"https://en.wikipedia.org/wiki/Codenames_(board_game)\">Rules</a>\n          <a className=\"btn btn-info\" href=\"https://github.com/siemanko/words2/\">Source</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nclass SettingsModal extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n      var self = this;\n      function reset_settings() {\n\n          self.dialog.show({\n              body: (<div className=\"text-center delete-clue-confirm\">\n                        <span>Are you want to reset settings to default? This cannot be undone.</span>\n                    </div>),\n              actions: [\n                  Dialog.CancelAction(),\n                  Dialog.OKAction(function() {\n                      sessionStorage.removeItem('storage_version');\n                      window.location.reload();\n                  })\n              ],\n              bsSize: 'small',\n          });\n      }\n\n      return (<div className=\"modal fade\" id=\"settings-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"settings-modal-label\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"about-modal-label\">Settings</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form>\n                <div className=\"form-group\">\n                  <label className=\"text-justify\">\n                    Double click to reveal a word<br />\n                    <small>Do you sometimes accidentally reveal a word because of your clumsy laptop touchpad? This option might be for you!.</small>\n                  </label>\n                  <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"double-click\" />\n                    <label className=\"form-check-label\" htmlFor=\"double-click\">\n                      require double click / tap to reveal a word\n                    </label>\n                  </div>\n                </div>\n                <hr />\n                <div className=\"form-group\">\n                  <label htmlFor=\"risk\" className=\"text-justify\">\n                    Language\n                  </label>\n                  <select className=\"form-control\" id=\"lang\">\n                    <option value=\"en\">English</option>\n                    <option value=\"pl\">Polish</option>\n                    <option value=\"he\">Hebrew (by Yonatan Zax)</option>\n                  </select>\n                </div>\n                <hr />\n                <div className=\"form-group\">\n                  <label className=\"text-justify\">\n                    Use only popular words<br />\n                    <small>The model can produce clues based on pretty large dictionary of words - about 30k - this allows it to sometimes find an original and awesome hint\n                      for a board where human might think that all hope is lost. However, this comes at a price - the clues can sometimes be unusual, offensive, hard to understrand or even google!\n                      If this is too much for you consider the option below. </small>\n                  </label>\n                  <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"use-common-words\" />\n                    <label className=\"form-check-label\" htmlFor=\"use-common-words\">\n                      Keep it simple\n                    </label>\n                  </div>\n                </div>\n                <hr />\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"risk\" className=\"text-justify\">\n                    Risk tolerance<br />\n                    <small>The number of bad words that are ignored when coming up with clues. Zeros words is the safest option, but might sometimes result in more awkward clues.</small>\n                  </label>\n                  <select className=\"form-control\" id=\"risk\">\n                    <option value=\"0\">zero words</option>\n                    <option value=\"1\">one word</option>\n                    <option value=\"2\">two words</option>\n                    <option value=\"3\">three words</option>\n                    <option value=\"allbutblack\">all words (no black)</option>\n                    <option value=\"all\">all words (including black)</option>\n                  </select>\n                </div>\n                <hr />\n\n                <div className=\"form-group\">\n                  <label className=\"text-justify\">\n                    AI Model Statistics<br />\n                    <small>Displays information about the automatic clue suggestion model, e.g. which words is the clue related to or what is its score.</small>\n                  </label>\n                  <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"debug-enable\" disabled />\n                    <label className=\"form-check-label\" htmlFor=\"debug-enable\">\n                      I want to know everything! <i>(coming soon!)</i>\n                    </label>\n                  </div>\n                </div>\n                <hr />\n                <div className=\"form-group\">\n                  <label className=\"text-justify\">\n                    Reset all settings<br />\n                    <small>Reset all settings to their default. Useful when something breaks.</small>\n                  </label>\n                  <input type=\"button\" className=\"btn btn-secondary btn-small w-100\" id=\"reset-settings\" value=\"Reset\" onClick={reset_settings} data-dismiss=\"modal\"></input>\n                  <Dialog ref={(component) => { this.dialog = component;}} />\n                </div>\n              </form>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n      );\n    }\n}\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\" id=\"main-navbar\">\n        <a className=\"navbar-brand\" href=\"http://clues.fun/\">\n          clues.fun\n          &nbsp;\n          <small id=\"red-left\" style={{ color: 'red' }}></small>\n          &nbsp;\n          <small id=\"blue-left\" style={{ color: 'blue' }}></small>\n          &nbsp;\n          &nbsp;\n          &nbsp;\n\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#menu\" aria-controls=\"menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"menu\">\n          {/* navigation buttons */}\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            {/* game modes  */}\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <img src=\"icons/detective.svg\" className=\"navbar-icon\" />&nbsp;Game Mode\n            </a>\n              <div className=\"dropdown-menu\">\n                <h6 class=\"dropdown-header\">Classic</h6>\n                <a className={(!this.props.enable_auto_clues && !this.props.all_revealed) ? \"dropdown-item active\" : \"dropdown-item\"} href=\"#\" id=\"guess\">\n                  <img src=\"icons/guess.svg\" className=\"navbar-icon\" />&nbsp;Guess\n                </a>\n                <a className={(!this.props.enable_auto_clues && this.props.all_revealed) ? \"dropdown-item active\" : \"dropdown-item\"} href=\"#\" id=\"cluemaster\">\n                  <img src=\"icons/detective.svg\" className=\"navbar-icon\" />&nbsp;Give&nbsp;Clues\n                </a>\n                <h6 class=\"dropdown-header\">New (beta)</h6>\n                <a className={(this.props.enable_auto_clues && !this.props.all_revealed) ? \"dropdown-item active\" : \"dropdown-item\"} href=\"#\" id=\"auto-cluemaster\">\n                  <img src=\"icons/ai2.svg\" className=\"navbar-icon\" />&nbsp;Auto&nbsp;Clues\n                </a>\n                <a className={(this.props.enable_auto_clues && this.props.all_revealed) ? \"dropdown-item active\" : \"dropdown-item\"} href=\"#\" id=\"assist-cluemaster\">\n                  <img src=\"icons/ai.svg\" className=\"navbar-icon\" />&nbsp;Assisted&nbsp;Clues\n                </a>\n              </div>\n            </li>\n\n            {/* reset  */}\n            <li className=\"nav-item\"><a href='#' id=\"reset\" className=\"nav-link\">\n              <img src=\"icons/reset.svg\" className=\"navbar-icon\" />&nbsp;Reset\n            </a>\n            </li>\n\n\n            {/* settings */}\n            <li className=\"nav-item\"><a href='#' id=\"about\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#settings-modal\">\n              <img src=\"icons/settings.svg\" className=\"navbar-icon\" />&nbsp;Settings\n            </a>\n            </li>\n\n            {/* donate */}\n            <li className=\"nav-item\"><a href='https://www.patreon.com/words2' id=\"patreon\" className=\"nav-link\">\n              <img src=\"icons/money.svg\" className=\"navbar-icon\" />&nbsp;Donate\n            </a></li>\n\n            {/* about */}\n            <li className=\"nav-item\"><a href='#' id=\"about\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#about-modal\">\n              <img src=\"icons/info.svg\" className=\"navbar-icon\" />&nbsp;About\n            </a>\n            </li>\n\n\n\n\n          </ul>\n\n          {/* seed input */}\n          <form className=\"form-inline my-2 my-lg-0\">\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">seed</span>\n              </div>\n              <input className=\"form-control\" type=\"text\" className=\"form-control\" id=\"seed\"\n                placeholder=\"seed\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Type this on a different device to get the same game\" />\n            </div>\n          </form>\n\n        </div >\n      </nav >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 87;"],"sourceRoot":""}